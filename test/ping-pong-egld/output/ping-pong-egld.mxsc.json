{
    "buildInfo": {
        "rustc": {
            "version": "1.82.0",
            "commitHash": "f6e511eec7342f59a25f7c0534f1dbea00d01b14",
            "commitDate": "2024-10-15",
            "channel": "Stable",
            "short": "rustc 1.82.0 (f6e511eec 2024-10-15)"
        },
        "contractCrate": {
            "name": "ping-pong-egld",
            "version": "0.0.2"
        },
        "framework": {
            "name": "multiversx-sc",
            "version": "0.54.4"
        }
    },
    "abi": {
        "docs": [
            "A contract that allows anyone to send a fixed sum, locks it for a while and then allows users to take it back.",
            "Sending funds to the contract is called \"ping\".",
            "Taking the same funds back is called \"pong\".",
            "",
            "Restrictions:",
            "- `ping` can be called only after the contract is activated. By default the contract is activated on deploy.",
            "- Users can only `ping` once, ever.",
            "- Only the set amount can be `ping`-ed, no more, no less.",
            "- The contract can optionally have a maximum cap. No more users can `ping` after the cap has been reached.",
            "- The `ping` endpoint optionally accepts",
            "- `pong` can only be called after the contract expired (a certain duration has passed since activation).",
            "- `pongAll` can be used to send to all users to `ping`-ed. If it runs low on gas, it will interrupt itself.",
            "It can be continued anytime."
        ],
        "name": "PingPong",
        "constructor": {
            "docs": [
                "Necessary configuration when deploying:",
                "`ping_amount` - the exact EGLD amount that needs to be sent when `ping`-ing.",
                "`duration_in_seconds` - how much time (in seconds) until contract expires.",
                "`opt_activation_timestamp` - optionally specify the contract to only activate at a later date.",
                "`max_funds` - optional funding cap, no more funds than this can be added to the contract."
            ],
            "inputs": [
                {
                    "name": "ping_amount",
                    "type": "BigUint"
                },
                {
                    "name": "duration_in_seconds",
                    "type": "u64"
                },
                {
                    "name": "opt_activation_timestamp",
                    "type": "Option<u64>"
                },
                {
                    "name": "max_funds",
                    "type": "optional<BigUint>",
                    "multi_arg": true
                }
            ],
            "outputs": []
        },
        "upgradeConstructor": {
            "inputs": [
                {
                    "name": "ping_amount",
                    "type": "BigUint"
                },
                {
                    "name": "duration_in_seconds",
                    "type": "u64"
                },
                {
                    "name": "opt_activation_timestamp",
                    "type": "Option<u64>"
                },
                {
                    "name": "max_funds",
                    "type": "optional<BigUint>",
                    "multi_arg": true
                }
            ],
            "outputs": []
        },
        "endpoints": [
            {
                "docs": [
                    "User sends some EGLD to be locked in the contract for a period of time.",
                    "Optional `_data` argument is ignored."
                ],
                "name": "ping",
                "mutability": "mutable",
                "payableInTokens": [
                    "EGLD"
                ],
                "inputs": [
                    {
                        "name": "_data",
                        "type": "ignore",
                        "multi_arg": true
                    }
                ],
                "outputs": []
            },
            {
                "docs": [
                    "User can take back funds from the contract.",
                    "Can only be called after expiration."
                ],
                "name": "pong",
                "mutability": "mutable",
                "inputs": [],
                "outputs": []
            },
            {
                "docs": [
                    "Send back funds to all users who pinged.",
                    "Returns",
                    "- `completed` if everything finished",
                    "- `interrupted` if run out of gas midway.",
                    "Can only be called after expiration."
                ],
                "name": "pongAll",
                "mutability": "mutable",
                "inputs": [],
                "outputs": [
                    {
                        "type": "OperationCompletionStatus"
                    }
                ]
            },
            {
                "docs": [
                    "Lists the addresses of all users that have `ping`-ed,",
                    "in the order they have `ping`-ed"
                ],
                "name": "getUserAddresses",
                "mutability": "readonly",
                "inputs": [],
                "outputs": [
                    {
                        "type": "variadic<Address>",
                        "multi_result": true
                    }
                ]
            },
            {
                "docs": [
                    "Returns the current contract state as a struct",
                    "for faster fetching from external parties"
                ],
                "name": "getContractState",
                "mutability": "readonly",
                "inputs": [],
                "outputs": [
                    {
                        "type": "ContractState"
                    }
                ]
            },
            {
                "name": "getPingAmount",
                "mutability": "readonly",
                "inputs": [],
                "outputs": [
                    {
                        "type": "BigUint"
                    }
                ]
            },
            {
                "name": "getDeadline",
                "mutability": "readonly",
                "inputs": [],
                "outputs": [
                    {
                        "type": "u64"
                    }
                ]
            },
            {
                "docs": [
                    "Block timestamp of the block where the contract got activated.",
                    "If not specified in the constructor it is the the deploy block timestamp."
                ],
                "name": "getActivationTimestamp",
                "mutability": "readonly",
                "inputs": [],
                "outputs": [
                    {
                        "type": "u64"
                    }
                ]
            },
            {
                "docs": [
                    "Optional funding cap."
                ],
                "name": "getMaxFunds",
                "mutability": "readonly",
                "inputs": [],
                "outputs": [
                    {
                        "type": "Option<BigUint>"
                    }
                ]
            },
            {
                "docs": [
                    "State of user funds.",
                    "0 - user unknown, never `ping`-ed",
                    "1 - `ping`-ed",
                    "2 - `pong`-ed"
                ],
                "name": "getUserStatus",
                "mutability": "readonly",
                "inputs": [
                    {
                        "name": "user_id",
                        "type": "u32"
                    }
                ],
                "outputs": [
                    {
                        "type": "UserStatus"
                    }
                ]
            },
            {
                "docs": [
                    "Part of the `pongAll` status, the last user to be processed.",
                    "0 if never called `pongAll` or `pongAll` completed."
                ],
                "name": "pongAllLastUser",
                "mutability": "readonly",
                "inputs": [],
                "outputs": [
                    {
                        "type": "u32"
                    }
                ]
            }
        ],
        "events": [
            {
                "docs": [
                    "Signals a successful ping by user with amount"
                ],
                "identifier": "",
                "inputs": [
                    {
                        "name": "caller",
                        "type": "Address",
                        "indexed": true
                    },
                    {
                        "name": "pinged_amount",
                        "type": "BigUint"
                    }
                ]
            },
            {
                "docs": [
                    "Signals a successful pong by user with amount"
                ],
                "identifier": "",
                "inputs": [
                    {
                        "name": "caller",
                        "type": "Address",
                        "indexed": true
                    },
                    {
                        "name": "ponged_amount",
                        "type": "BigUint"
                    }
                ]
            },
            {
                "docs": [
                    "Signals the beginning of the pong_all operation, status and last user"
                ],
                "identifier": "",
                "inputs": [
                    {
                        "name": "timestamp",
                        "type": "u64",
                        "indexed": true
                    },
                    {
                        "name": "status",
                        "type": "OperationCompletionStatus",
                        "indexed": true
                    },
                    {
                        "name": "pong_all_last_user",
                        "type": "u32",
                        "indexed": true
                    }
                ]
            }
        ],
        "esdtAttributes": [],
        "hasCallback": false,
        "types": {
            "ContractState": {
                "type": "struct",
                "fields": [
                    {
                        "name": "ping_amount",
                        "type": "BigUint"
                    },
                    {
                        "name": "deadline",
                        "type": "u64"
                    },
                    {
                        "name": "activation_timestamp",
                        "type": "u64"
                    },
                    {
                        "name": "max_funds",
                        "type": "Option<BigUint>"
                    },
                    {
                        "name": "pong_all_last_user",
                        "type": "u32"
                    }
                ]
            },
            "OperationCompletionStatus": {
                "type": "explicit-enum",
                "variants": [
                    {
                        "docs": [
                            "indicates that operation was completed"
                        ],
                        "name": "completed"
                    },
                    {
                        "docs": [
                            "indicates that operation was interrupted prematurely, due to low gas"
                        ],
                        "name": "interrupted"
                    }
                ]
            },
            "UserStatus": {
                "type": "enum",
                "variants": [
                    {
                        "name": "New",
                        "discriminant": 0
                    },
                    {
                        "name": "Registered",
                        "discriminant": 1
                    },
                    {
                        "name": "Withdrawn",
                        "discriminant": 2
                    }
                ]
            }
        }
    },
    "code": "",
    "report": {
        "imports": [
            "bigIntAdd",
            "bigIntCmp",
            "bigIntFinishUnsigned",
            "bigIntGetCallValue",
            "bigIntGetExternalBalance",
            "bigIntGetUnsignedArgument",
            "checkNoPayment",
            "finish",
            "getBlockTimestamp",
            "getGasLeft",
            "getNumArguments",
            "getNumESDTTransfers",
            "mBufferAppend",
            "mBufferAppendBytes",
            "mBufferCopyByteSlice",
            "mBufferFinish",
            "mBufferFromBigIntUnsigned",
            "mBufferGetArgument",
            "mBufferGetByteSlice",
            "mBufferGetBytes",
            "mBufferGetLength",
            "mBufferNew",
            "mBufferSetBytes",
            "mBufferStorageLoad",
            "mBufferStorageStore",
            "mBufferToBigIntUnsigned",
            "managedCaller",
            "managedSCAddress",
            "managedSignalError",
            "managedTransferValueExecute",
            "managedWriteLog",
            "signalError",
            "smallIntFinishUnsigned",
            "smallIntGetUnsignedArgument"
        ],
        "isMemGrow": false,
        "eiCheck": {
            "eiVersion": "1.3",
            "ok": true
        },
        "codeReport": {
            "path": "../output/ping-pong-egld.wasm",
            "size": 6612,
            "hasAllocator": false,
            "hasPanic": "without message"
        }
    }
}
